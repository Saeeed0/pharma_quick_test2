// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pharma_quick_test2.Models;

#nullable disable

namespace pharma_quick_test2.Migrations
{
    [DbContext(typeof(pharma_Context))]
    partial class pharma_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("pharma_quick_test2.Models.ActiveIngredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .HasColumnType("int")
                        .HasColumnName("IngredientID");

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("IngredientId")
                        .HasName("PK__ActiveIn__BEAEB27AA35F184D");

                    b.ToTable("ActiveIngredients");
                });

            modelBuilder.Entity("pharma_quick_test2.Models.Medication", b =>
                {
                    b.Property<int>("MedicationId")
                        .HasColumnType("int")
                        .HasColumnName("MedicationID");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<string>("ContraindicationsForUse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Precautions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SideEffects")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseOfMedications")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedicationId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Medications");
                });

            modelBuilder.Entity("pharma_quick_test2.Models.MedicationActiveIngredient", b =>
                {
                    b.Property<int>("MedicationId")
                        .HasColumnType("int")
                        .HasColumnName("MedicationID");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int")
                        .HasColumnName("IngredientID");

                    b.HasKey("MedicationId", "IngredientId")
                        .HasName("PK__Medicati__D906F1FDC044A754");

                    b.HasIndex("IngredientId");

                    b.ToTable("MedicationActiveIngredients");
                });

            modelBuilder.Entity("pharma_quick_test2.Models.MedicationCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("CategoryId")
                        .HasName("PK__Medicati__19093A2BC6D087EB");

                    b.ToTable("MedicationCategories");
                });

            modelBuilder.Entity("pharma_quick_test2.Models.MedicationReplacement", b =>
                {
                    b.Property<int>("MedId")
                        .HasColumnType("int")
                        .HasColumnName("medId");

                    b.Property<int>("ReplacementId")
                        .HasColumnType("int")
                        .HasColumnName("replacementId");

                    b.HasKey("MedId", "ReplacementId")
                        .HasName("PK__Medicati__5A96AEE443919F42");

                    b.HasIndex("ReplacementId");

                    b.ToTable("MedicationReplacements");
                });

            modelBuilder.Entity("pharma_quick_test2.Models.Medication", b =>
                {
                    b.HasOne("pharma_quick_test2.Models.MedicationCategory", "Category")
                        .WithMany("Medications")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Medicatio__Categ__267ABA7A");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("pharma_quick_test2.Models.MedicationActiveIngredient", b =>
                {
                    b.HasOne("pharma_quick_test2.Models.ActiveIngredient", "Ingredient")
                        .WithMany("MedicationActiveIngredients")
                        .HasForeignKey("IngredientId")
                        .IsRequired()
                        .HasConstraintName("FK__Medicatio__Ingre__2C3393D0");

                    b.HasOne("pharma_quick_test2.Models.Medication", "Medication")
                        .WithMany("MedicationActiveIngredients")
                        .HasForeignKey("MedicationId")
                        .IsRequired()
                        .HasConstraintName("FK__Medicatio__Medic__2B3F6F97");

                    b.Navigation("Ingredient");

                    b.Navigation("Medication");
                });

            modelBuilder.Entity("pharma_quick_test2.Models.MedicationReplacement", b =>
                {
                    b.HasOne("pharma_quick_test2.Models.Medication", "Med")
                        .WithMany("MedicationReplacementMeds")
                        .HasForeignKey("MedId")
                        .IsRequired()
                        .HasConstraintName("FK__Medicatio__medId__6477ECF3");

                    b.HasOne("pharma_quick_test2.Models.Medication", "Replacement")
                        .WithMany("MedicationReplacementReplacements")
                        .HasForeignKey("ReplacementId")
                        .IsRequired()
                        .HasConstraintName("FK__Medicatio__repla__656C112C");

                    b.Navigation("Med");

                    b.Navigation("Replacement");
                });

            modelBuilder.Entity("pharma_quick_test2.Models.ActiveIngredient", b =>
                {
                    b.Navigation("MedicationActiveIngredients");
                });

            modelBuilder.Entity("pharma_quick_test2.Models.Medication", b =>
                {
                    b.Navigation("MedicationActiveIngredients");

                    b.Navigation("MedicationReplacementMeds");

                    b.Navigation("MedicationReplacementReplacements");
                });

            modelBuilder.Entity("pharma_quick_test2.Models.MedicationCategory", b =>
                {
                    b.Navigation("Medications");
                });
#pragma warning restore 612, 618
        }
    }
}
